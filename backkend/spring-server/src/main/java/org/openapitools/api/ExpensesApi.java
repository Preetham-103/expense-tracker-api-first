/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.14.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.Expense;
import org.openapitools.model.ExpenseInput;
import org.openapitools.model.ExpenseSummary;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.lang.Nullable;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-08-31T13:54:08.277838500+05:30[Asia/Calcutta]", comments = "Generator version: 7.14.0")
@Validated
@Tag(name = "expenses", description = "the expenses API")
public interface ExpensesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /expenses : Get all expenses
     *
     * @return List of all expenses (status code 200)
     */
    @Operation(
        operationId = "expensesGet",
        summary = "Get all expenses",
        responses = {
            @ApiResponse(responseCode = "200", description = "List of all expenses", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Expense.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/expenses",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Expense>> expensesGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"date\" : \"2025-08-31\", \"amount\" : 120.5, \"id\" : 1, \"title\" : \"Grocery shopping\", \"category\" : \"Food\" }, { \"date\" : \"2025-08-31\", \"amount\" : 120.5, \"id\" : 1, \"title\" : \"Grocery shopping\", \"category\" : \"Food\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /expenses/{id} : Delete an expense
     *
     * @param id  (required)
     * @return Expense deleted successfully (status code 204)
     *         or Expense not found (status code 404)
     */
    @Operation(
        operationId = "expensesIdDelete",
        summary = "Delete an expense",
        responses = {
            @ApiResponse(responseCode = "204", description = "Expense deleted successfully"),
            @ApiResponse(responseCode = "404", description = "Expense not found")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/expenses/{id}"
    )
    
    default ResponseEntity<Void> expensesIdDelete(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") Integer id
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /expenses/{id} : Get expense by ID
     *
     * @param id  (required)
     * @return Expense details (status code 200)
     *         or Expense not found (status code 404)
     */
    @Operation(
        operationId = "expensesIdGet",
        summary = "Get expense by ID",
        responses = {
            @ApiResponse(responseCode = "200", description = "Expense details", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Expense.class))
            }),
            @ApiResponse(responseCode = "404", description = "Expense not found")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/expenses/{id}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<Expense> expensesIdGet(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") Integer id
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2025-08-31\", \"amount\" : 120.5, \"id\" : 1, \"title\" : \"Grocery shopping\", \"category\" : \"Food\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /expenses/{id} : Update an expense
     *
     * @param id  (required)
     * @param expenseInput  (required)
     * @return Expense updated successfully (status code 200)
     *         or Expense not found (status code 404)
     */
    @Operation(
        operationId = "expensesIdPut",
        summary = "Update an expense",
        responses = {
            @ApiResponse(responseCode = "200", description = "Expense updated successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Expense.class))
            }),
            @ApiResponse(responseCode = "404", description = "Expense not found")
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/expenses/{id}",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Expense> expensesIdPut(
        @Parameter(name = "id", description = "", required = true, in = ParameterIn.PATH) @PathVariable("id") Integer id,
        @Parameter(name = "ExpenseInput", description = "", required = true) @Valid @RequestBody ExpenseInput expenseInput
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2025-08-31\", \"amount\" : 120.5, \"id\" : 1, \"title\" : \"Grocery shopping\", \"category\" : \"Food\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /expenses : Add a new expense
     *
     * @param expenseInput  (required)
     * @return Expense created successfully (status code 201)
     */
    @Operation(
        operationId = "expensesPost",
        summary = "Add a new expense",
        responses = {
            @ApiResponse(responseCode = "201", description = "Expense created successfully", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Expense.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/expenses",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Expense> expensesPost(
        @Parameter(name = "ExpenseInput", description = "", required = true) @Valid @RequestBody ExpenseInput expenseInput
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"date\" : \"2025-08-31\", \"amount\" : 120.5, \"id\" : 1, \"title\" : \"Grocery shopping\", \"category\" : \"Food\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /expenses/summary : Get total expenses by category
     *
     * @return Expense summary by category (status code 200)
     */
    @Operation(
        operationId = "expensesSummaryGet",
        summary = "Get total expenses by category",
        responses = {
            @ApiResponse(responseCode = "200", description = "Expense summary by category", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = ExpenseSummary.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/expenses/summary",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<ExpenseSummary>> expensesSummaryGet(
        
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"totalAmount\" : 500.75, \"category\" : \"Food\" }, { \"totalAmount\" : 500.75, \"category\" : \"Food\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
